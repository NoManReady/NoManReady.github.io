(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{115:function(n,t,e){"use strict";e.r(t);var i=e(0),s=Object(i.a)({},(function(){var n=this.$createElement;this._self._c;return this._m(0)}),[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"js-插件开发方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js-插件开发方式","aria-hidden":"true"}},[this._v("#")]),this._v(" js 插件开发方式")]),t("h2",{attrs:{id:"完成的-js-插件格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#完成的-js-插件格式","aria-hidden":"true"}},[this._v("#")]),this._v(" 完成的 js 插件格式")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v(";(function(undefined) {\n  'use strict'\n  var _global\n  var plugin = {\n    add: function(n1, n2) {\n      return n1 + n2\n    },\n    sub: function(n1, n2) {\n      return n1 - n2\n    },\n    mul: function(n1, n2) {\n      return n1 * n2\n    },\n    div: function(n1, n2) {\n      return n1 / n2\n    },\n    sur: function(n1, n2) {\n      return n1 % n2\n    }\n  }\n  // 将插件对象暴露给全局对象  (0, eval)('this')相当于执行eval('this')\n  _global = (function() {\n    return this || (0, eval)('this')\n  })()\n  // 判断是否存在加载器，如果存在加载器，我们就使用加载器，如果不存在加载器。我们就使用顶级域对象。\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = plugin\n  } else if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return plugin\n    })\n  } else {\n    !('plugin' in _global) && (_global.plugin = plugin)\n  }\n})()\n")])])])}],!1,null,null,null);t.default=s.exports}}]);