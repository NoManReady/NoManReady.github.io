(window.webpackJsonp=window.webpackJsonp||[]).push([[280],{374:function(t,e,n){"use strict";n.r(e);var s=n(0),a=Object(s.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"base-class"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#base-class","aria-hidden":"true"}},[this._v("#")]),this._v(" Base Class")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("class Base extends HTMLElement {\n  constructor() {\n    super()\n    this._properties = new Map()\n    // 配置properties与attribute的映射\n    this.constructor.observedAttributes.forEach(attr => {\n      Object.defineProperty(this, attr, {\n        get() {\n          let _attr = this.getAttribute(attr)\n          return this._properties.get(_attr)\n        },\n        set(v) {\n          let _uni_key = new Date().getTime().toString(16)\n          this._properties.set(_uni_key, v)\n          if (v === undefined || v === null) {\n            this.removeAttribute(attr)\n          } else {\n            this.setAttribute(attr, _uni_key)\n          }\n        }\n      })\n    })\n  }\n  attributeChangedCallback(attr, oldValue, newValue) {\n    let _callbackName = `_${attr}_change`\n    if (this[_callbackName] && typeof this[_callbackName] === 'function') {\n      this[_callbackName](this._properties.get(oldValue), this._properties.get(newValue))\n    }\n  }\n  connectedCallback() {\n    if (this.mounted && typeof this.mounted === 'function') {\n      this.mounted()\n    }\n  }\n  adoptedCallback() {\n    if (this.moved && typeof this.moved === 'function') {\n      this.moved()\n    }\n  }\n  disconnectedCallback() {\n    if (this.unmounted && typeof this.unmounted === 'function') {\n      this.unmounted()\n    }\n  }\n}\n\n")])])])}],!1,null,null,null);e.default=a.exports}}]);