(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{114:function(e,n,r){"use strict";r.r(n);var s=r(0),t=Object(s.a)({},(function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"content"},[this._m(0),this._m(1),this._m(2),this._m(3),n("js-scroll")],1)}),[function(){var e=this.$createElement,n=this._self._c||e;return n("h1",{attrs:{id:"手机适配方案gulp配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#手机适配方案gulp配置","aria-hidden":"true"}},[this._v("#")]),this._v(" 手机适配方案gulp配置")])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"样式配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#样式配置文件","aria-hidden":"true"}},[this._v("#")]),this._v(" 样式配置文件")])},function(){var e=this.$createElement,n=this._self._c||e;return n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('let gulp = require(\'gulp\')\nlet sass = require(\'gulp-sass\')\nlet autoprefixer = require(\'autoprefixer\')\nlet postcss = require(\'gulp-postcss\')\nlet minifyCss = require(\'gulp-minify-css\')\nlet minifyJs = require(\'gulp-minify\')\nlet babel = require(\'gulp-babel\')\nlet del = require(\'del\')\nlet Reproxy = require("gulp-connect-reproxy")\n\nlet connect = require(\'gulp-connect\')\n\n\nconst OPTIONS = {\n  build: \'dist\',\n  cssDir: [\'./src/scss/*.scss\'],\n  jsDir: [\'./src/js/*.js\'],\n  server: {\n    port: 8099,\n    base: path.join(__dirname, \'../code\')\n  }\n}\n\nvar gulp = require(\'gulp\')\nvar postcss = require(\'gulp-postcss\')\nvar px2rem = require(\'postcss-px2rem\')\nlet px2viewport = require(\'postcss-px-to-viewport\')\n\n//gulp[series,parallel]=[\'串行\',\'并行\']（都是返回一个函数，并且都是接受任务串）\n\ngulp.task(\'compile\', function () {\n  var processors = [\n    px2viewport({\n      // 设计稿尺寸\n      viewportWidth: 750,\n      // viewportHeight: 667,\n      unitPrecision: 5,\n      viewportUnit: \'vw\',\n      selectorBlackList: [],\n      minPixelValue: 1,\n      mediaQuery: false\n    }),\n    // px2rem({\n    //   // 1rem=74px\n    //   remUnit: 75\n    // }),\n    autoprefixer({\n      browsers: ["Android 4.1", "iOS 7.1", "Chrome > 31", "ff > 31", "ie >= 10"]\n    })]\n  return gulp.src(OPTIONS.srDir)\n    .pipe(sass())\n    .pipe(postcss(processors))\n    .pipe(gulp.dest(OPTIONS.build))\n})\n\n// 清楚编译文件夹\ngulp.task(\'clean\', cb => {\n  return del(OPTIONS.build, { force: true }, cb)\n})\n\n// // 监听编译目录\n// 监听编译目录\ngulp.task(\'watch\', function () {\n  return gulp.watch(OPTIONS.cssDir, gulp.parallel(\'compileCss\'))\n})\n\ngulp.task(\'watchjs\', function () {\n  return gulp.watch(OPTIONS.jsDir, gulp.parallel(\'compileJs\'))\n})\n\n\n// 创建静态服务(代理服务)\ngulp.task(\'static\', (done) => {\n  connect.server({\n    root: OPTIONS.server.base,\n    port: OPTIONS.server.port,\n    host: \'127.0.0.1\',\n    livereload: true,\n    middleware: function (connect, options) {\n      options.rule = [/\\.[png|jpg|cgi]/]\n      options.server = "192.168.1.1"\n      return [new Reproxy(options)]\n    }\n  })\n  // let app = connect()\n  // app.use(serveStatic(OPTIONS.server.base))\n  // http.createServer(app).listen(OPTIONS.server.port)\n  done()\n})\n\n// 默认任务\ngulp.task(\'default\',\n  gulp.series(\'clean\', \'compileCss\', \'compileJs\',\n    gulp.parallel(\'watch\', \'watchjs\', \'static\')))\n\n\n{\n  "name": "typescript",\n  "version": "1.0.0",\n  "main": "index.js",\n  "license": "MIT",\n  "devDependencies": {\n    "@babel/core": "^7.2.2",\n    "@babel/preset-env": "^7.2.3",\n    "babel-core": "^6.26.3",\n    "babel-preset-env": "^1.7.0",\n    "gulp-autoprefixer": "^6.0.0",\n    "gulp-babel": "^8.0.0",\n    "gulp-concat": "^2.6.1",\n    "gulp-connect": "^5.7.0",\n    "gulp-connect-reproxy": "0.0.98",\n    "gulp-minify": "^3.1.0",\n    "gulp-minify-css": "^1.2.4",\n    "gulp-notify": "^3.2.0",\n    "gulp-postcss": "^8.0.0",\n    "gulp-rename": "^1.4.0",\n    "gulp-sass": "^4.0.2",\n    "gulp-uglify": "^3.0.1"\n  },\n  "dependencies": {\n    "connect": "^3.6.6",\n    "del": "^3.0.0",\n    "gulp": "^4.0.0",\n    "gulp-load-plugins": "^1.5.0",\n    "serve-static": "^1.13.2"\n  }\n}\n\n')])])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"无线滚动测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#无线滚动测试","aria-hidden":"true"}},[this._v("#")]),this._v(" 无线滚动测试")])}],!1,null,null,null);n.default=t.exports}}]);