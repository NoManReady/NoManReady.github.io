(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{118:function(t,e,s){"use strict";s.r(e);var r=s(0),n=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._m(1),s("p",[t._v("Mockjs 是一款前端开发中拦截 Ajax 请求，然后随机生成预定义模板数据的工具库。前端开发过程中可以用它来模拟服务端响应，让前端独立于服务端开发。")]),t._m(2),t._m(3),t._m(4),t._m(5),t._m(6),t._m(7),s("p",[t._v("Mockjs 包含两种语法规范：")]),t._m(8),t._m(9),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14),s("p",[t._v("配置拦截 Ajax 请求时的行为。支持的配置项有：timeout。")]),t._m(15),t._m(16),t._m(17),s("p",[s("router-link",{attrs:{to:"/mockjs/demo.html",title:"mockjs-demo"}},[t._v("Mockjs 演示")])],1),t._m(18),t._m(19),t._m(20)])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"mockjs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mockjs","aria-hidden":"true"}},[this._v("#")]),this._v(" Mockjs")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"mockjs-是什么？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mockjs-是什么？","aria-hidden":"true"}},[this._v("#")]),this._v(" Mockjs 是什么？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("其优点有如下几点：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("前后端分离开发")]),e("li",[this._v("增加单元测试数据的真实性")]),e("li",[this._v("可以无侵入的植入 mock 数据，开发生产环境切换不需要修改代码")]),e("li",[this._v("mock 数据接口简单明了")]),e("li",[this._v("mock 数据类型丰富")]),e("li",[this._v("可以自定义数据类型")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"mockjs-安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mockjs-安装","aria-hidden":"true"}},[this._v("#")]),this._v(" Mockjs 安装")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("em",[this._v("这边只进行 npm 方式的安装")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("npx install mockjs -D\nimport Mock from mockjs\n\x3c!-- 随机生成20-200条指定数据模板的数据 --\x3e\nconst _mockData=Mock.mock({\n  'list|20-200':[{\n    'name':'@first',\n    'age|18-35':1\n  }]\n})\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"mockjs-语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mockjs-语法","aria-hidden":"true"}},[this._v("#")]),this._v(" Mockjs 语法")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("数据模板规范（DTD）")]),e("li",[this._v("数据占位符规范（DPD）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"1、数据模板规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#1、数据模板规范","aria-hidden":"true"}},[this._v("#")]),this._v(" 1、数据模板规范")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("\x3c!-- 数据模板包含3部分：属性名(name)，生成规则([rule])，属性值(value) --\x3e\n'name|rule':value\n\x3c!-- 包含7中格式（生成规则需要依赖属性值的类型，不同的属性值具有不同的含义）： --\x3e\n'name|min-max': value\n'name|count': value\n'name|min-max.dmin-dmax': value\n'name|min-max.dcount': value\n'name|count.dmin-dmax': value\n'name|count.dcount': value\n'name|+step': value\n\x3c!-- 属性值可以为：字符串、数字、布尔型、对象、数组、函数、正则表达式 --\x3e\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"2、数据占位符规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#2、数据占位符规范","aria-hidden":"true"}},[this._v("#")]),this._v(" 2、数据占位符规范")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("em",[this._v("占位符")]),this._v("只是在属性值字符串中占个位置，并不出现在最终的属性值中。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("\x3c!-- 占位符格式如下： --\x3e\n@占位符\n@占位符(argv[,argv])\n\x3c!--Mockjs中为我们内置了许多种不同的占位符，当占位符引用数据模板中的属性时会优先使用数据模板的属性值 --\x3e\nconst _person=Mock.mock({\n  first:'@FIRST',\n  last:'@LAST',\n  fullname:'@first-@last'\n})\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"mockjs-设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mockjs-设置","aria-hidden":"true"}},[this._v("#")]),this._v(" Mockjs 设置")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("\x3c!-- 表示请求的响应时间 --\x3e\n\x3c!-- Mock.setup({\n  timeout:{数值或以中横线划分的数值范围}\n}) --\x3e\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"mockjs-数据生成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mockjs-数据生成","aria-hidden":"true"}},[this._v("#")]),this._v(" Mockjs 数据生成")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("根据数据模板生成数据"),s("code",[t._v("Mock.mock(template)")])]),s("li",[t._v("拦截特定请求路径，然后生成数据(optionsb 表示此次请求的选项)"),s("code",[t._v("Mock.mock(url,tempalte|function(options))")])]),s("li",[t._v("拦截特定请求路径特定请求动作类型，然后生成数据(optionsb 表示此次请求的选项)"),s("code",[t._v("Mock.mock(url,type,tempalte|function(options))")])]),s("li",[t._v("判断真实数据是否符合数据模板定义的数据"),s("code",[t._v("Mock.valid(template,data)")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("a",{attrs:{href:"https://github.com/nuysoft/Mock/wiki",title:"mockjs-wiki",target:"_blank",rel:"noopener noreferrer"}},[this._v("Mockjs 文档地址")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("a",{attrs:{href:"http://mockjs.com/",title:"mockjs",target:"_blank",rel:"noopener noreferrer"}},[this._v("Mockjs 官网")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("a",{attrs:{href:"https://www.easy-mock.com/",title:"easymock",target:"_blank",rel:"noopener noreferrer"}},[this._v("Easy Mock")])])}],!1,null,null,null);e.default=n.exports}}]);